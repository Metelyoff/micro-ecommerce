name: Raspberry Pi CI/CD

on:
  push:
    branches: [k8s]

env:
  ENVIRONMENT: rpc3s
  IMAGE_NAME: metelyoff/micro-ecommerce

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and push Docker images
        run: |
          docker buildx rm builder || true
          docker buildx create --use
          services=(inventory-service order-service payment-service webapp)
          for service in "${services[@]}"; do
            docker buildx build \
            --platform linux/arm64 \
            -t $IMAGE_NAME:$service \
            -f $service/Dockerfile \
            --push $service
          done

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    env:
      ORDER_POSTGRES_USER: ${{ secrets.ORDER_POSTGRES_USER }}
      ORDER_POSTGRES_PASSWORD: ${{ secrets.ORDER_POSTGRES_PASSWORD }}
      PAYMENT_POSTGRES_USER: ${{ secrets.PAYMENT_POSTGRES_USER }}
      PAYMENT_POSTGRES_PASSWORD: ${{ secrets.PAYMENT_POSTGRES_PASSWORD }}
      INVENTORY_POSTGRES_USER: ${{ secrets.INVENTORY_POSTGRES_USER }}
      INVENTORY_POSTGRES_PASSWORD: ${{ secrets.INVENTORY_POSTGRES_PASSWORD }}
      CLOUDFLARE_TUNNEL_TOKEN: ${{ secrets.CLOUDFLARE_TUNNEL_TOKEN }}
      DOMAIN: ${{ secrets.DOMAIN }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > ~/.kube/config

      - name: Install cloudflared
        run: |
          sudo mkdir -p /etc/cloudflared
          echo "${{ secrets.CLOUDFLARE_TUNNEL_TOKEN }}" > /etc/cloudflared/creds.json

      - name: Set up envs
        run: |
          envsubst < k8s-micro-ecommerce.yaml > k8s-micro-ecommerce.yaml

      - name: Deploy to Raspberry Pi k3s
        run: |
          kubectl apply -f k8s-micro-ecommerce.yaml
